/* automatically generated by rust-bindgen 0.72.0 */

pub const XPC_API_VERSION: u32 = 20200610;
pub const XPC_CONNECTION_MACH_SERVICE_LISTENER: u32 = 1;
pub const XPC_CONNECTION_MACH_SERVICE_PRIVILEGED: u32 = 2;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __darwin_natural_t = ::std::os::raw::c_uint;
pub type __darwin_gid_t = __uint32_t;
pub type __darwin_mach_port_name_t = __darwin_natural_t;
pub type __darwin_mach_port_t = __darwin_mach_port_name_t;
pub type __darwin_pid_t = __int32_t;
pub type __darwin_uid_t = __uint32_t;
pub type __darwin_uuid_t = [::std::os::raw::c_uchar; 16usize];
pub type gid_t = __darwin_gid_t;
pub type pid_t = __darwin_pid_t;
pub type uid_t = __darwin_uid_t;
pub type va_list = __builtin_va_list;
pub type uuid_t = __darwin_uuid_t;
pub type mach_port_t = __darwin_mach_port_t;
pub type dispatch_block_t = *mut ::std::os::raw::c_void;
pub type dispatch_queue_t = *mut dispatch_queue_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct dispatch_queue_s {
    pub _address: u8,
}
pub type dispatch_queue_attr_t = *mut dispatch_queue_attr_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct dispatch_queue_attr_s {
    pub _address: u8,
}
unsafe extern "C" {
    pub fn dispatch_queue_create(
        label: *const ::std::os::raw::c_char,
        attr: dispatch_queue_attr_t,
    ) -> dispatch_queue_t;
}
pub type dispatch_data_t = *mut dispatch_data_s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct dispatch_data_s {
    pub _address: u8,
}
pub type au_asid_t = pid_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _xpc_type_s {
    _unused: [u8; 0],
}
pub type xpc_type_t = *const _xpc_type_s;
pub type xpc_object_t = *mut ::std::os::raw::c_void;
pub type xpc_handler_t = *mut ::std::os::raw::c_void;
unsafe extern "C" {
    pub static _xpc_type_connection: _xpc_type_s;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _xpc_connection_s {
    _unused: [u8; 0],
}
pub type xpc_connection_t = *mut _xpc_connection_s;
pub type xpc_connection_handler_t =
    ::std::option::Option<unsafe extern "C" fn(connection: xpc_connection_t)>;
unsafe extern "C" {
    pub static _xpc_type_endpoint: _xpc_type_s;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _xpc_endpoint_s {
    _unused: [u8; 0],
}
pub type xpc_endpoint_t = *mut _xpc_endpoint_s;
unsafe extern "C" {
    pub static _xpc_type_null: _xpc_type_s;
}
unsafe extern "C" {
    pub static _xpc_type_bool: _xpc_type_s;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _xpc_bool_s {
    _unused: [u8; 0],
}
unsafe extern "C" {
    pub static _xpc_bool_true: _xpc_bool_s;
}
unsafe extern "C" {
    pub static _xpc_bool_false: _xpc_bool_s;
}
unsafe extern "C" {
    pub static _xpc_type_int64: _xpc_type_s;
}
unsafe extern "C" {
    pub static _xpc_type_uint64: _xpc_type_s;
}
unsafe extern "C" {
    pub static _xpc_type_double: _xpc_type_s;
}
unsafe extern "C" {
    pub static _xpc_type_date: _xpc_type_s;
}
unsafe extern "C" {
    pub static _xpc_type_data: _xpc_type_s;
}
unsafe extern "C" {
    pub static _xpc_type_string: _xpc_type_s;
}
unsafe extern "C" {
    pub static _xpc_type_uuid: _xpc_type_s;
}
unsafe extern "C" {
    pub static _xpc_type_fd: _xpc_type_s;
}
unsafe extern "C" {
    pub static _xpc_type_shmem: _xpc_type_s;
}
unsafe extern "C" {
    pub static _xpc_type_array: _xpc_type_s;
}
unsafe extern "C" {
    pub static _xpc_type_dictionary: _xpc_type_s;
}
unsafe extern "C" {
    pub static _xpc_type_error: _xpc_type_s;
}
unsafe extern "C" {
    pub static _xpc_error_key_description: *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub static _xpc_event_key_name: *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub static _xpc_type_rich_error: _xpc_type_s;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _xpc_rich_error_s {
    _unused: [u8; 0],
}
pub type xpc_rich_error_t = *mut _xpc_rich_error_s;
unsafe extern "C" {
    pub fn xpc_endpoint_create(connection: xpc_connection_t) -> xpc_endpoint_t;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_INTERVAL: *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_REPEATING: *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_DELAY: *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_GRACE_PERIOD: *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_INTERVAL_1_MIN: i64;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_INTERVAL_5_MIN: i64;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_INTERVAL_15_MIN: i64;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_INTERVAL_30_MIN: i64;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_INTERVAL_1_HOUR: i64;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_INTERVAL_4_HOURS: i64;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_INTERVAL_8_HOURS: i64;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_INTERVAL_1_DAY: i64;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_INTERVAL_7_DAYS: i64;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_PRIORITY: *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_PRIORITY_MAINTENANCE: *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_PRIORITY_UTILITY: *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_ALLOW_BATTERY: *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_REQUIRE_SCREEN_SLEEP: *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_PREVENT_DEVICE_SLEEP: *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_REQUIRE_BATTERY_LEVEL: *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub static XPC_ACTIVITY_REQUIRE_HDD_SPINNING: *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub static _xpc_type_activity: _xpc_type_s;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _xpc_activity_s {
    _unused: [u8; 0],
}
pub type xpc_activity_t = *mut _xpc_activity_s;
pub type xpc_activity_handler_t = *mut ::std::os::raw::c_void;
unsafe extern "C" {
    pub static XPC_ACTIVITY_CHECK_IN: xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_activity_register(
        identifier: *const ::std::os::raw::c_char,
        criteria: xpc_object_t,
        handler: xpc_activity_handler_t,
    );
}
unsafe extern "C" {
    pub fn xpc_activity_copy_criteria(activity: xpc_activity_t) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_activity_set_criteria(activity: xpc_activity_t, criteria: xpc_object_t);
}
pub const XPC_ACTIVITY_STATE_CHECK_IN: _bindgen_ty_3 = 0;
pub const XPC_ACTIVITY_STATE_WAIT: _bindgen_ty_3 = 1;
pub const XPC_ACTIVITY_STATE_RUN: _bindgen_ty_3 = 2;
pub const XPC_ACTIVITY_STATE_DEFER: _bindgen_ty_3 = 3;
pub const XPC_ACTIVITY_STATE_CONTINUE: _bindgen_ty_3 = 4;
pub const XPC_ACTIVITY_STATE_DONE: _bindgen_ty_3 = 5;
pub type _bindgen_ty_3 = ::std::os::raw::c_uint;
pub type xpc_activity_state_t = ::std::os::raw::c_long;
unsafe extern "C" {
    pub fn xpc_activity_get_state(activity: xpc_activity_t) -> xpc_activity_state_t;
}
unsafe extern "C" {
    pub fn xpc_activity_set_state(activity: xpc_activity_t, state: xpc_activity_state_t) -> bool;
}
unsafe extern "C" {
    pub fn xpc_activity_should_defer(activity: xpc_activity_t) -> bool;
}
unsafe extern "C" {
    pub fn xpc_activity_unregister(identifier: *const ::std::os::raw::c_char);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xpc_peer_requirement_s {
    _unused: [u8; 0],
}
pub type xpc_peer_requirement_t = *mut xpc_peer_requirement_s;
unsafe extern "C" {
    pub fn xpc_peer_requirement_create_entitlement_exists(
        entitlement: *const ::std::os::raw::c_char,
        error_out: *mut xpc_rich_error_t,
    ) -> xpc_peer_requirement_t;
}
unsafe extern "C" {
    pub fn xpc_peer_requirement_create_entitlement_matches_value(
        entitlement: *const ::std::os::raw::c_char,
        value: xpc_object_t,
        error_out: *mut xpc_rich_error_t,
    ) -> xpc_peer_requirement_t;
}
unsafe extern "C" {
    pub fn xpc_peer_requirement_create_team_identity(
        signing_identifier: *const ::std::os::raw::c_char,
        error_out: *mut xpc_rich_error_t,
    ) -> xpc_peer_requirement_t;
}
unsafe extern "C" {
    pub fn xpc_peer_requirement_create_platform_identity(
        signing_identifier: *const ::std::os::raw::c_char,
        error_out: *mut xpc_rich_error_t,
    ) -> xpc_peer_requirement_t;
}
unsafe extern "C" {
    pub fn xpc_peer_requirement_create_lwcr(
        lwcr: xpc_object_t,
        error_out: *mut xpc_rich_error_t,
    ) -> xpc_peer_requirement_t;
}
unsafe extern "C" {
    pub fn xpc_peer_requirement_match_received_message(
        peer_requirement: xpc_peer_requirement_t,
        message: xpc_object_t,
        error_out: *mut xpc_rich_error_t,
    ) -> bool;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _xpc_dictionary_s {
    _unused: [u8; 0],
}
unsafe extern "C" {
    pub static _xpc_error_connection_interrupted: _xpc_dictionary_s;
}
unsafe extern "C" {
    pub static _xpc_error_connection_invalid: _xpc_dictionary_s;
}
unsafe extern "C" {
    pub static _xpc_error_termination_imminent: _xpc_dictionary_s;
}
unsafe extern "C" {
    pub static _xpc_error_peer_code_signing_requirement: _xpc_dictionary_s;
}
pub type xpc_finalizer_t =
    ::std::option::Option<unsafe extern "C" fn(value: *mut ::std::os::raw::c_void)>;
unsafe extern "C" {
    pub fn xpc_connection_create(
        name: *const ::std::os::raw::c_char,
        targetq: dispatch_queue_t,
    ) -> xpc_connection_t;
}
unsafe extern "C" {
    pub fn xpc_connection_create_mach_service(
        name: *const ::std::os::raw::c_char,
        targetq: dispatch_queue_t,
        flags: u64,
    ) -> xpc_connection_t;
}
unsafe extern "C" {
    pub fn xpc_connection_create_from_endpoint(endpoint: xpc_endpoint_t) -> xpc_connection_t;
}
unsafe extern "C" {
    pub fn xpc_connection_set_target_queue(connection: xpc_connection_t, targetq: dispatch_queue_t);
}
unsafe extern "C" {
    pub fn xpc_connection_set_event_handler(connection: xpc_connection_t, handler: xpc_handler_t);
}
unsafe extern "C" {
    pub fn xpc_connection_activate(connection: xpc_connection_t);
}
unsafe extern "C" {
    pub fn xpc_connection_suspend(connection: xpc_connection_t);
}
unsafe extern "C" {
    pub fn xpc_connection_resume(connection: xpc_connection_t);
}
unsafe extern "C" {
    pub fn xpc_connection_send_message(connection: xpc_connection_t, message: xpc_object_t);
}
unsafe extern "C" {
    pub fn xpc_connection_send_barrier(connection: xpc_connection_t, barrier: dispatch_block_t);
}
unsafe extern "C" {
    pub fn xpc_connection_send_message_with_reply(
        connection: xpc_connection_t,
        message: xpc_object_t,
        replyq: dispatch_queue_t,
        handler: xpc_handler_t,
    );
}
unsafe extern "C" {
    pub fn xpc_connection_send_message_with_reply_sync(
        connection: xpc_connection_t,
        message: xpc_object_t,
    ) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_connection_cancel(connection: xpc_connection_t);
}
unsafe extern "C" {
    pub fn xpc_connection_get_name(connection: xpc_connection_t) -> *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn xpc_connection_get_euid(connection: xpc_connection_t) -> uid_t;
}
unsafe extern "C" {
    pub fn xpc_connection_get_egid(connection: xpc_connection_t) -> gid_t;
}
unsafe extern "C" {
    pub fn xpc_connection_get_pid(connection: xpc_connection_t) -> pid_t;
}
unsafe extern "C" {
    pub fn xpc_connection_get_asid(connection: xpc_connection_t) -> au_asid_t;
}
unsafe extern "C" {
    pub fn xpc_connection_set_context(
        connection: xpc_connection_t,
        context: *mut ::std::os::raw::c_void,
    );
}
unsafe extern "C" {
    pub fn xpc_connection_get_context(connection: xpc_connection_t) -> *mut ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn xpc_connection_set_finalizer_f(connection: xpc_connection_t, finalizer: xpc_finalizer_t);
}
unsafe extern "C" {
    pub fn xpc_connection_set_peer_code_signing_requirement(
        connection: xpc_connection_t,
        requirement: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xpc_connection_set_peer_entitlement_exists_requirement(
        connection: xpc_connection_t,
        entitlement: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xpc_connection_set_peer_entitlement_matches_value_requirement(
        connection: xpc_connection_t,
        entitlement: *const ::std::os::raw::c_char,
        value: xpc_object_t,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xpc_connection_set_peer_team_identity_requirement(
        connection: xpc_connection_t,
        signing_identifier: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xpc_connection_set_peer_platform_identity_requirement(
        connection: xpc_connection_t,
        signing_identifier: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xpc_connection_set_peer_lightweight_code_requirement(
        connection: xpc_connection_t,
        lwcr: xpc_object_t,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xpc_connection_set_peer_requirement(
        connection: xpc_connection_t,
        peer_requirement: xpc_peer_requirement_t,
    );
}
unsafe extern "C" {
    pub fn xpc_connection_copy_invalidation_reason(
        connection: xpc_connection_t,
    ) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn xpc_rich_error_copy_description(error: xpc_rich_error_t) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn xpc_rich_error_can_retry(error: xpc_rich_error_t) -> bool;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xpc_session_s {
    _unused: [u8; 0],
}
pub type xpc_session_t = *mut xpc_session_s;
pub const xpc_session_create_flags_t_XPC_SESSION_CREATE_NONE: xpc_session_create_flags_t = 0;
pub const xpc_session_create_flags_t_XPC_SESSION_CREATE_INACTIVE: xpc_session_create_flags_t = 1;
pub const xpc_session_create_flags_t_XPC_SESSION_CREATE_MACH_PRIVILEGED:
    xpc_session_create_flags_t = 2;
pub type xpc_session_create_flags_t = u64;
pub type xpc_session_cancel_handler_t = *mut ::std::os::raw::c_void;
pub type xpc_session_incoming_message_handler_t = *mut ::std::os::raw::c_void;
pub type xpc_session_reply_handler_t = *mut ::std::os::raw::c_void;
unsafe extern "C" {
    pub fn xpc_session_copy_description(session: xpc_session_t) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn xpc_session_create_xpc_service(
        name: *const ::std::os::raw::c_char,
        target_queue: dispatch_queue_t,
        flags: xpc_session_create_flags_t,
        error_out: *mut xpc_rich_error_t,
    ) -> xpc_session_t;
}
unsafe extern "C" {
    pub fn xpc_session_create_mach_service(
        mach_service: *const ::std::os::raw::c_char,
        target_queue: dispatch_queue_t,
        flags: xpc_session_create_flags_t,
        error_out: *mut xpc_rich_error_t,
    ) -> xpc_session_t;
}
unsafe extern "C" {
    pub fn xpc_session_set_incoming_message_handler(
        session: xpc_session_t,
        handler: xpc_session_incoming_message_handler_t,
    );
}
unsafe extern "C" {
    pub fn xpc_session_set_cancel_handler(
        session: xpc_session_t,
        cancel_handler: xpc_session_cancel_handler_t,
    );
}
unsafe extern "C" {
    pub fn xpc_session_set_target_queue(session: xpc_session_t, target_queue: dispatch_queue_t);
}
unsafe extern "C" {
    pub fn xpc_session_activate(session: xpc_session_t, error_out: *mut xpc_rich_error_t) -> bool;
}
unsafe extern "C" {
    pub fn xpc_session_cancel(session: xpc_session_t);
}
unsafe extern "C" {
    pub fn xpc_session_send_message(
        session: xpc_session_t,
        message: xpc_object_t,
    ) -> xpc_rich_error_t;
}
unsafe extern "C" {
    pub fn xpc_session_send_message_with_reply_sync(
        session: xpc_session_t,
        message: xpc_object_t,
        error_out: *mut xpc_rich_error_t,
    ) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_session_send_message_with_reply_async(
        session: xpc_session_t,
        message: xpc_object_t,
        reply_handler: xpc_session_reply_handler_t,
    );
}
unsafe extern "C" {
    pub fn xpc_session_set_peer_code_signing_requirement(
        session: xpc_session_t,
        requirement: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xpc_session_set_peer_requirement(
        session: xpc_session_t,
        requirement: xpc_peer_requirement_t,
    );
}
unsafe extern "C" {
    pub static _xpc_type_session: _xpc_type_s;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xpc_listener_s {
    _unused: [u8; 0],
}
pub type xpc_listener_t = *mut xpc_listener_s;
pub const xpc_listener_create_flags_t_XPC_LISTENER_CREATE_NONE: xpc_listener_create_flags_t = 0;
pub const xpc_listener_create_flags_t_XPC_LISTENER_CREATE_INACTIVE: xpc_listener_create_flags_t = 1;
pub const xpc_listener_create_flags_t_XPC_LISTENER_CREATE_FORCE_MACH: xpc_listener_create_flags_t =
    2;
pub const xpc_listener_create_flags_t_XPC_LISTENER_CREATE_FORCE_XPCSERVICE:
    xpc_listener_create_flags_t = 4;
pub type xpc_listener_create_flags_t = u64;
pub type xpc_listener_incoming_session_handler_t = *mut ::std::os::raw::c_void;
unsafe extern "C" {
    pub fn xpc_listener_copy_description(listener: xpc_listener_t) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn xpc_listener_create(
        service: *const ::std::os::raw::c_char,
        target_queue: dispatch_queue_t,
        flags: xpc_listener_create_flags_t,
        incoming_session_handler: xpc_listener_incoming_session_handler_t,
        error_out: *mut xpc_rich_error_t,
    ) -> xpc_listener_t;
}
unsafe extern "C" {
    pub fn xpc_listener_activate(
        listener: xpc_listener_t,
        error_out: *mut xpc_rich_error_t,
    ) -> bool;
}
unsafe extern "C" {
    pub fn xpc_listener_cancel(listener: xpc_listener_t);
}
unsafe extern "C" {
    pub fn xpc_listener_reject_peer(peer: xpc_session_t, reason: *const ::std::os::raw::c_char);
}
unsafe extern "C" {
    pub fn xpc_listener_set_peer_code_signing_requirement(
        listener: xpc_listener_t,
        requirement: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xpc_listener_set_peer_requirement(
        listener: xpc_listener_t,
        requirement: xpc_peer_requirement_t,
    );
}
unsafe extern "C" {
    pub fn xpc_retain(object: xpc_object_t) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_release(object: xpc_object_t);
}
unsafe extern "C" {
    pub fn xpc_get_type(object: xpc_object_t) -> xpc_type_t;
}
unsafe extern "C" {
    pub fn xpc_type_get_name(type_: xpc_type_t) -> *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn xpc_copy(object: xpc_object_t) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_equal(object1: xpc_object_t, object2: xpc_object_t) -> bool;
}
unsafe extern "C" {
    pub fn xpc_hash(object: xpc_object_t) -> usize;
}
unsafe extern "C" {
    pub fn xpc_copy_description(object: xpc_object_t) -> *mut ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn xpc_null_create() -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_bool_create(value: bool) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_bool_get_value(xbool: xpc_object_t) -> bool;
}
unsafe extern "C" {
    pub fn xpc_int64_create(value: i64) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_int64_get_value(xint: xpc_object_t) -> i64;
}
unsafe extern "C" {
    pub fn xpc_uint64_create(value: u64) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_uint64_get_value(xuint: xpc_object_t) -> u64;
}
unsafe extern "C" {
    pub fn xpc_double_create(value: f64) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_double_get_value(xdouble: xpc_object_t) -> f64;
}
unsafe extern "C" {
    pub fn xpc_date_create(interval: i64) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_date_create_from_current() -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_date_get_value(xdate: xpc_object_t) -> i64;
}
unsafe extern "C" {
    pub fn xpc_data_create(bytes: *const ::std::os::raw::c_void, length: usize) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_data_create_with_dispatch_data(ddata: dispatch_data_t) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_data_get_length(xdata: xpc_object_t) -> usize;
}
unsafe extern "C" {
    pub fn xpc_data_get_bytes_ptr(xdata: xpc_object_t) -> *const ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn xpc_data_get_bytes(
        xdata: xpc_object_t,
        buffer: *mut ::std::os::raw::c_void,
        off: usize,
        length: usize,
    ) -> usize;
}
unsafe extern "C" {
    pub fn xpc_string_create(string: *const ::std::os::raw::c_char) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_string_create_with_format(fmt: *const ::std::os::raw::c_char, ...) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_string_create_with_format_and_arguments(
        fmt: *const ::std::os::raw::c_char,
        ap: va_list,
    ) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_string_get_length(xstring: xpc_object_t) -> usize;
}
unsafe extern "C" {
    pub fn xpc_string_get_string_ptr(xstring: xpc_object_t) -> *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn xpc_uuid_create(uuid: *const ::std::os::raw::c_uchar) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_uuid_get_bytes(xuuid: xpc_object_t) -> *const u8;
}
unsafe extern "C" {
    pub fn xpc_fd_create(fd: ::std::os::raw::c_int) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_fd_dup(xfd: xpc_object_t) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xpc_shmem_create(region: *mut ::std::os::raw::c_void, length: usize) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_shmem_map(xshmem: xpc_object_t, region: *mut *mut ::std::os::raw::c_void) -> usize;
}
pub type xpc_array_applier_t = *mut ::std::os::raw::c_void;
unsafe extern "C" {
    pub fn xpc_array_create(
        objects: *const *mut ::std::os::raw::c_void,
        count: usize,
    ) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_array_create_empty() -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_array_set_value(xarray: xpc_object_t, index: usize, value: xpc_object_t);
}
unsafe extern "C" {
    pub fn xpc_array_append_value(xarray: xpc_object_t, value: xpc_object_t);
}
unsafe extern "C" {
    pub fn xpc_array_get_count(xarray: xpc_object_t) -> usize;
}
unsafe extern "C" {
    pub fn xpc_array_get_value(xarray: xpc_object_t, index: usize) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_array_apply(xarray: xpc_object_t, applier: xpc_array_applier_t) -> bool;
}
unsafe extern "C" {
    pub fn xpc_array_set_bool(xarray: xpc_object_t, index: usize, value: bool);
}
unsafe extern "C" {
    pub fn xpc_array_set_int64(xarray: xpc_object_t, index: usize, value: i64);
}
unsafe extern "C" {
    pub fn xpc_array_set_uint64(xarray: xpc_object_t, index: usize, value: u64);
}
unsafe extern "C" {
    pub fn xpc_array_set_double(xarray: xpc_object_t, index: usize, value: f64);
}
unsafe extern "C" {
    pub fn xpc_array_set_date(xarray: xpc_object_t, index: usize, value: i64);
}
unsafe extern "C" {
    pub fn xpc_array_set_data(
        xarray: xpc_object_t,
        index: usize,
        bytes: *const ::std::os::raw::c_void,
        length: usize,
    );
}
unsafe extern "C" {
    pub fn xpc_array_set_string(
        xarray: xpc_object_t,
        index: usize,
        string: *const ::std::os::raw::c_char,
    );
}
unsafe extern "C" {
    pub fn xpc_array_set_uuid(
        xarray: xpc_object_t,
        index: usize,
        uuid: *const ::std::os::raw::c_uchar,
    );
}
unsafe extern "C" {
    pub fn xpc_array_set_fd(xarray: xpc_object_t, index: usize, fd: ::std::os::raw::c_int);
}
unsafe extern "C" {
    pub fn xpc_array_set_connection(
        xarray: xpc_object_t,
        index: usize,
        connection: xpc_connection_t,
    );
}
unsafe extern "C" {
    pub fn xpc_array_get_bool(xarray: xpc_object_t, index: usize) -> bool;
}
unsafe extern "C" {
    pub fn xpc_array_get_int64(xarray: xpc_object_t, index: usize) -> i64;
}
unsafe extern "C" {
    pub fn xpc_array_get_uint64(xarray: xpc_object_t, index: usize) -> u64;
}
unsafe extern "C" {
    pub fn xpc_array_get_double(xarray: xpc_object_t, index: usize) -> f64;
}
unsafe extern "C" {
    pub fn xpc_array_get_date(xarray: xpc_object_t, index: usize) -> i64;
}
unsafe extern "C" {
    pub fn xpc_array_get_data(
        xarray: xpc_object_t,
        index: usize,
        length: *mut usize,
    ) -> *const ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn xpc_array_get_string(
        xarray: xpc_object_t,
        index: usize,
    ) -> *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn xpc_array_get_uuid(xarray: xpc_object_t, index: usize) -> *const u8;
}
unsafe extern "C" {
    pub fn xpc_array_dup_fd(xarray: xpc_object_t, index: usize) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xpc_array_create_connection(xarray: xpc_object_t, index: usize) -> xpc_connection_t;
}
unsafe extern "C" {
    pub fn xpc_array_get_dictionary(xarray: xpc_object_t, index: usize) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_array_get_array(xarray: xpc_object_t, index: usize) -> xpc_object_t;
}
pub type xpc_dictionary_applier_t = *mut ::std::os::raw::c_void;
unsafe extern "C" {
    pub fn xpc_dictionary_create(
        keys: *const *const ::std::os::raw::c_char,
        values: *const *mut ::std::os::raw::c_void,
        count: usize,
    ) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_dictionary_create_empty() -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_dictionary_create_reply(original: xpc_object_t) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_dictionary_set_value(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
        value: xpc_object_t,
    );
}
unsafe extern "C" {
    pub fn xpc_dictionary_get_value(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
    ) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_dictionary_get_count(xdict: xpc_object_t) -> usize;
}
unsafe extern "C" {
    pub fn xpc_dictionary_apply(xdict: xpc_object_t, applier: xpc_dictionary_applier_t) -> bool;
}
unsafe extern "C" {
    pub fn xpc_dictionary_get_remote_connection(xdict: xpc_object_t) -> xpc_connection_t;
}
unsafe extern "C" {
    pub fn xpc_dictionary_set_bool(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
        value: bool,
    );
}
unsafe extern "C" {
    pub fn xpc_dictionary_set_int64(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
        value: i64,
    );
}
unsafe extern "C" {
    pub fn xpc_dictionary_set_uint64(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
        value: u64,
    );
}
unsafe extern "C" {
    pub fn xpc_dictionary_set_double(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
        value: f64,
    );
}
unsafe extern "C" {
    pub fn xpc_dictionary_set_date(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
        value: i64,
    );
}
unsafe extern "C" {
    pub fn xpc_dictionary_set_data(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
        bytes: *const ::std::os::raw::c_void,
        length: usize,
    );
}
unsafe extern "C" {
    pub fn xpc_dictionary_set_string(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
        string: *const ::std::os::raw::c_char,
    );
}
unsafe extern "C" {
    pub fn xpc_dictionary_set_uuid(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
        uuid: *const ::std::os::raw::c_uchar,
    );
}
unsafe extern "C" {
    pub fn xpc_dictionary_set_fd(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
        fd: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn xpc_dictionary_set_connection(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
        connection: xpc_connection_t,
    );
}
unsafe extern "C" {
    pub fn xpc_dictionary_set_mach_send(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
        p: mach_port_t,
    );
}
unsafe extern "C" {
    pub fn xpc_dictionary_get_bool(xdict: xpc_object_t, key: *const ::std::os::raw::c_char)
    -> bool;
}
unsafe extern "C" {
    pub fn xpc_dictionary_get_int64(xdict: xpc_object_t, key: *const ::std::os::raw::c_char)
    -> i64;
}
unsafe extern "C" {
    pub fn xpc_dictionary_get_uint64(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
    ) -> u64;
}
unsafe extern "C" {
    pub fn xpc_dictionary_get_double(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
    ) -> f64;
}
unsafe extern "C" {
    pub fn xpc_dictionary_get_date(xdict: xpc_object_t, key: *const ::std::os::raw::c_char) -> i64;
}
unsafe extern "C" {
    pub fn xpc_dictionary_get_data(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
        length: *mut usize,
    ) -> *const ::std::os::raw::c_void;
}
unsafe extern "C" {
    pub fn xpc_dictionary_get_string(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn xpc_dictionary_get_uuid(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
    ) -> *const u8;
}
unsafe extern "C" {
    pub fn xpc_dictionary_dup_fd(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn xpc_dictionary_create_connection(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
    ) -> xpc_connection_t;
}
unsafe extern "C" {
    pub fn xpc_dictionary_get_dictionary(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
    ) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_dictionary_get_array(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
    ) -> xpc_object_t;
}
unsafe extern "C" {
    pub fn xpc_dictionary_copy_mach_send(
        xdict: xpc_object_t,
        key: *const ::std::os::raw::c_char,
    ) -> mach_port_t;
}
unsafe extern "C" {
    pub fn xpc_main(handler: xpc_connection_handler_t) -> !;
}
unsafe extern "C" {
    pub fn xpc_transaction_begin();
}
unsafe extern "C" {
    pub fn xpc_transaction_end();
}
unsafe extern "C" {
    pub fn xpc_set_event_stream_handler(
        stream: *const ::std::os::raw::c_char,
        targetq: dispatch_queue_t,
        handler: xpc_handler_t,
    );
}
pub type __builtin_va_list = *mut ::std::os::raw::c_char;
